<?php

namespace {{ backend_bundle_ns }}\Form\Type;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\DependencyInjection;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;
//use Symfony\Component\Form;

class {{ form_class }} extends AbstractType implements DependencyInjection\ContainerAwareInterface
{
    use FormTypeContainerableTrait;

    /**
     * @param FormBuilderInterface $builder
     * @param array                $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        ///** @var \{{ core_bundle_ns }}\Entity\{{ entity }} $entity */
        //$entity = $builder->getData();

        $builder{{ "\n" }}{%- for field in fields %}
            ->add('{{ field.fieldName }}', {{ (field.formType is defined) ? "'"~field.formType~"'": 'null' }} , [
                    /* {{ field.type }} */
                {% if field.formType is defined and field.formType == 'choice' %}
    'label'       => '{{ field.label }}',
                    'empty_value' => '',
                {% else %}
    'label' => '{{ field.label }}',
                {% endif -%}
            ]){{ "\n" }}
        {%- endfor %}
        ;

        //$builder->addEventListener(Form\FormEvents::SUBMIT,
        //    function (Form\FormEvent $event)  {
        //    }
        //);
    }

    /**
     * @param OptionsResolverInterface $resolver
     */
    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults([
            'data_class'         => '{{ core_bundle_ns }}\Entity\{{ entity }}',
            'label'              => '{{ form_label }}',
            'translation_domain' => 'entity_{{ entity }}']);
    }

    /**
     * @return string
     */
    public function getName()
    {
        return 'type_entity_{{ entity_name }}';
    }
}