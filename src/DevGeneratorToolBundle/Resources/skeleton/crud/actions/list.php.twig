
    /**
     * List all {{ entity }} entities.
     * @return \Symfony\Component\HttpFoundation\Response
     */
    public function listAction()
    {
        /**
         * @var GridBuilder $gridBuilder
         */
        $gridBuilder = $this->get('grid.builder');
        {% set format = "             %-" ~ (maxColumnNameSize+1) ~ "s => %s" %}

        $columns = [
        {% for field, metadata in fields %}
{% if field == 'id' %}
{% set d= "" %}
{% else %}
{% set d= "'translation_domain' => 'entity_" ~ entity ~ "'" %}
{% endif %}
{{ format|format("'" ~ field ~ "'", "[" ~ d ~ "],") }}
        {% endfor %}
        ];

        $gridBuilder
            ->setGridId('{{ route_name_entity }}')
            ->setExports(['CSV', 'Excel', 'XML'])
            ->addCreateControll('{{ route_prefix }}.create')
            ->setRouteUrl($this->generateUrl('{{ route_prefix }}.list'))
            ->setSource('{{ bundle }}:{{ entity }}', $columns)
            ->setRowActions([
                [null, '{{ route_prefix }}.show', false, '_self', ['icon'=>'icon-eye-open', 'title'=>'Detail']],
                [null, '{{ route_prefix }}.edit', false, '_self', ['icon'=>'icon-edit',     'title'=>'Edit']],
            ]);

            $massActionDelete = new DeleteMassAction(true);
            $massActionDelete->setParameters(['icon'=>'icon-trash']);

            $gridBuilder->setMassActions([
                $massActionDelete
            ]);

        $this->initBreadcrumb();

        return $gridBuilder->getGridResponse(
            '{{ namespace|replace({'\\': ''}) }}:{{ entity|replace({'\\': '/'}) }}:Crud/list.html.twig', [
                'with_ajax'    => true,
                'context_menu' => $this->get('menu.builder')
                                       ->createContextMenu('{{ route_name_entity }}')
            ]
        );
    }
