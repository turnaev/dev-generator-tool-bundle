
    /**
     * List all {{ entity }} entities.
     * @return HttpFoundation\Response
     */
    public function listAction(HttpFoundation\Request $request)
    {
        $gridBuilder = $this->get('grid.builder');
{% set format = "        %-" ~ (max_column_name_size+1) ~ "s => %s" %}

        $columns = [
    {% for field, metadata in fields %}
{% if field == 'id' -%}
    {{ format|format("'" ~ field ~ "'", "[],") }}
{% else -%}
    {{ format|format("'" ~ field ~ "'", "['title' => '"~ metadata.label ~"'],") }}
{% endif %}
    {% endfor %}
    ];

        $queryBuilder = $this->getRepository('{{ core_bundle }}:{{ entity }}')
            ->createQueryBuilder('i')
        ;

        $gridBuilder
            ->setGridId('{{ entity_name }}_grid')
            ->setRouteUrl($this->generateUrl('{{ route_prefix }}.list'))
            ->setSource($queryBuilder, $columns, ['translation_domain' => 'entity_{{ entity }}'])
            ->setRowActions([
                [null, '{{ route_prefix }}.show', false, '_self', ['icon'=>'icon-eye',  'title'=>'Detail']],
                [null, '{{ route_prefix }}.edit', false, '_self', ['icon'=>'icon-edit', 'title'=>'Edit']],
            ]);

        if($request->isXmlHttpRequest()) {

            $response = $gridBuilder->getGridResponse(
                '{{ backend_bundle }}:{{ entity }}:Crud/list.html.twig'
            );
        } else {

            $this->initBreadcrumb();

            $response = $gridBuilder->getGridResponse(
                '{{ backend_bundle }}:{{  entity }}:Crud/list.html.twig', [
                    'context_menu' => $this->createContextMenu()
                ]
            );
        }

        return $response;
    }
