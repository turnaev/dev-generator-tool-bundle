
    /**
     * List all {{ entity }} entities.
     *
     * @param HttpFoundation\Request $request
     *
     * @return HttpFoundation\Response
     */
    public function listAction(HttpFoundation\Request $request)
    {
        $gridBuilder = $this->get('grid.builder');
{% set format = "        %-" ~ (max_column_name_size+1) ~ "s => %s" %}

        $columns = [
    {% for field, metadata in fields %}
    {{ format|format("'" ~ field ~ "'", "null,") }}
    {% endfor %}
    ];

        $queryBuilder = $this->getRepository('{{ core_bundle }}:{{ entity }}')
            ->createQueryBuilder('i')
        ;

        $gridBuilder
            ->setGridId('{{ entity_name }}_grid')
            ->setRouteUrl($this->generateUrl('{{ route_prefix }}.list'))
            ->setSource($queryBuilder, $columns, ['translation_domain' => '{{ entity }}'])
            ->setRowActions([
                [null, '{{ route_prefix }}.show', false, '_self', ['icon' => 'fa fa-eye',  'title' => 'Detail']],
                [null, '{{ route_prefix }}.edit', false, '_self', ['icon' => 'fa fa-edit', 'title' => 'Edit']],
            ]);

        $viewData = [];
        if (!$request->isXmlHttpRequest()) {
            $this->initBreadcrumb();
            $viewData = [
                'context_menu' => $this->createContextMenu(),
            ];
        }

        return $gridBuilder->getGridResponse(
            '{{ backend_bundle }}:{{  entity }}:Crud/list.html.twig',
            $viewData
        );
    }
